{"ast":null,"code":"// import { legacy_createStore } from \"redux\";\n// const reducerFn = (state = { counter : 0 }, action ) => {\n//     // Limitation of Redux - Synchronous Function & We should not mutate the original state\n//     if (action.type === \"INC\") {\n//         return {counter:state.counter + 1 }\n//     }\n//     if (action.type === \"DEC\") {\n//         return {counter:state.counter - 1 }\n//     }\n//     if (action.type === \"ADD\") {\n//         return {counter:state.counter + action.payload }\n//     }\n//          return state;\n// };\n// const store = legacy_createStore(reducerFn);\n// export default store;\n// Counter app using Redux-Toolkit /////\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0\n  },\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n\n    decrement(state, action) {\n      state.counter === 0 ? alert(\"dhfjsd\") : state.counter--;\n    },\n\n    addBy(state, action) {\n      state.counter += action.payload;\n    },\n\n    reset(state, action) {\n      state.counter = 0;\n    }\n\n  }\n});\nexport const actions = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","counterSlice","name","initialState","counter","reducers","increment","state","action","decrement","alert","addBy","payload","reset","actions","store","reducer"],"sources":["/Users/apple/Desktop/counter_app/react-redux/src/store/index.js"],"sourcesContent":["// import { legacy_createStore } from \"redux\";\n\n// const reducerFn = (state = { counter : 0 }, action ) => {\n\n//     // Limitation of Redux - Synchronous Function & We should not mutate the original state\n\n//     if (action.type === \"INC\") {\n//         return {counter:state.counter + 1 }\n//     }\n\n//     if (action.type === \"DEC\") {\n//         return {counter:state.counter - 1 }\n//     }\n\n//     if (action.type === \"ADD\") {\n//         return {counter:state.counter + action.payload }\n//     }\n\n\n//          return state;\n// };\n\n// const store = legacy_createStore(reducerFn);\n\n// export default store;\n\n// Counter app using Redux-Toolkit /////\n\nimport { configureStore,  createSlice } from '@reduxjs/toolkit';\n\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState : {counter: 0},\n    reducers : {\n        increment(state, action) {\n            state.counter ++ ; \n         },\n        decrement(state, action) {\n            state.counter===0? alert(\"dhfjsd\"):state.counter--\n            \n         },\n        addBy(state, action) {\n            state.counter += action.payload;\n        },\n\n        reset(state, action) {\n            state.counter = 0;\n         }\n\n    }\n\n})\n\nexport const actions = counterSlice.actions;\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n})\n\nexport default store;"],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA,SAASA,cAAT,EAA0BC,WAA1B,QAA6C,kBAA7C;AAGA,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,SADuB;EAE7BC,YAAY,EAAG;IAACC,OAAO,EAAE;EAAV,CAFc;EAG7BC,QAAQ,EAAG;IACPC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACH,OAAN;IACF,CAHK;;IAIPK,SAAS,CAACF,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACH,OAAN,KAAgB,CAAhB,GAAmBM,KAAK,CAAC,QAAD,CAAxB,GAAmCH,KAAK,CAACH,OAAN,EAAnC;IAEF,CAPK;;IAQPO,KAAK,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MACjBD,KAAK,CAACH,OAAN,IAAiBI,MAAM,CAACI,OAAxB;IACH,CAVM;;IAYPC,KAAK,CAACN,KAAD,EAAQC,MAAR,EAAgB;MACjBD,KAAK,CAACH,OAAN,GAAgB,CAAhB;IACF;;EAdK;AAHkB,CAAD,CAAhC;AAuBA,OAAO,MAAMU,OAAO,GAAGb,YAAY,CAACa,OAA7B;AAEP,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EACzBiB,OAAO,EAAEf,YAAY,CAACe;AADG,CAAD,CAA5B;AAIA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}